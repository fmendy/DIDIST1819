/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package gui.carreras;

import dto.Carrera;
import gui.PantallaPrincipal;
import gui.TableModels.CorredoresEnCarrreraTableModels;
import java.awt.Color;
import java.util.ArrayList;
import java.util.Iterator;
import java.util.List;
import Logica.LeerEscribirCSV;
import java.io.File;
import java.net.MalformedURLException;
import java.net.URL;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.help.HelpBroker;
import javax.help.HelpSet;
import javax.help.HelpSetException;

/**
 *
 * @author alvar
 */
public class PantallaCarrerasCorriendo extends javax.swing.JDialog {

    private Carrera carrera;
    private List<Integer> dorsalesSinLlegar = new ArrayList();
    private List<Integer> dorsalesLlegaron = new ArrayList();
    private PantallaPrincipal pp;

    /**
     * Creates new form PantallaCarrerasCorriendo
     */
    public PantallaCarrerasCorriendo(Carrera carrera, java.awt.Frame parent, boolean modal) throws UnsupportedClassVersionError{
        super(parent, modal);
        this.carrera = carrera;
        Logica.LogicaCarrera.inicializarClasificacion(carrera);
        pp = (PantallaPrincipal) parent;
        initComponents();
        rellenarTabla();
        jLabelNombreCarrera.setText(carrera.getNombre());

        cronometro1.setVisible(false);
        jButtonFinalizar.setVisible(false);
        mostrarAyuda();
    }

    public void cargarDorsales() {
        //Vaciamos ambas listas
        dorsalesSinLlegar = new ArrayList<>();
        dorsalesLlegaron = new ArrayList<>();
        //Cargamos todos en los que no llegaron
        Iterator ite = carrera.getCorredoresInscritos().keySet().iterator();
        while (ite.hasNext()) {
            dorsalesSinLlegar.add((Integer) ite.next());
        }
        for (int i = 0; i < carrera.getClasificacion().length; i++) {
            if (carrera.getClasificacion()[i][0] != null) {
                dorsalesLlegaron.add(Integer.parseInt(carrera.getClasificacion()[i][0]));
            }

        }
        //Borramos de los que no llegaron los que llegaron
        dorsalesSinLlegar.removeAll(dorsalesLlegaron);
    }

    public void rellenarTabla() {
        cargarDorsales();
        //Cargamos la lista de corredores sin llegar
        CorredoresEnCarrreraTableModels cidtm = new CorredoresEnCarrreraTableModels(dorsalesSinLlegar, carrera);
        jTableCorredoresNoLlegaron.setModel(cidtm);
        estadoCarrera();

    }

    public void mostrarAyuda() {
        //Se carga el fichero de ayuda
        File file = new File("JavaHelp" + File.separator + "help_set.hs");
        try {
            URL url = file.toURI().toURL();

            System.out.println(url);

            try {
                //Se crea el helpset
                HelpSet helpset = new HelpSet(getClass().getClassLoader(), url);
                //Se crea el helpBroker
                HelpBroker hb = helpset.createHelpBroker();

                //cargar las ayudas
                hb.enableHelpOnButton(jMenuItemMenuAyuda, "indice", helpset);
                hb.enableHelpKey(getRootPane(), "ayuda_carrera_corriendo", helpset);
                hb.enableHelpOnButton(jMenuItemCorredor, "ayuda_corredor", helpset);
                hb.enableHelpOnButton(jMenuItemCarrera, "ayuda_carrera", helpset);
                hb.enableHelpOnButton(jMenuItemCarreraCorriendo, "ayuda_carrera_corriendo", helpset);

            } catch (HelpSetException ex) {
                Logger.getLogger(PantallaPrincipal.class.getName()).log(Level.SEVERE, null, ex);
            }
        } catch (MalformedURLException ex) {
            Logger.getLogger(PantallaPrincipal.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    public void estadoCarrera() {
        jLabelSituacion.setText("En Curso");
        jLabelSituacion.setForeground(Color.GREEN);
        jLabelSituacion.setBackground(Color.BLACK);
        //Comprobamos si ha llegado el final
        if (dorsalesSinLlegar.size() == 0) {
            cronometro1.setVisible(false);
            jLabelSituacion.setText("Finalizada");
            jLabelSituacion.setForeground(Color.red);
            Logica.LogicaCarrera.finalizarCarrera(carrera);
            jButtonFinalizar.setVisible(true);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTableCorredoresNoLlegaron = new javax.swing.JTable();
        jButtonIniciar = new javax.swing.JButton();
        jLabelNombreCarrera = new javax.swing.JLabel();
        jLabelSituacion = new javax.swing.JLabel();
        jButtonFinalizar = new javax.swing.JButton();
        cronometro1 = new ElementosPersonalizados.Cronometro();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenuAyuda = new javax.swing.JMenu();
        jMenuItemMenuAyuda = new javax.swing.JMenuItem();
        jMenuItemCorredor = new javax.swing.JMenuItem();
        jMenuItemCarrera = new javax.swing.JMenuItem();
        jMenuItemCarreraCorriendo = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jTableCorredoresNoLlegaron.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTableCorredoresNoLlegaron);

        jButtonIniciar.setText("Iniciar");
        jButtonIniciar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonIniciarActionPerformed(evt);
            }
        });

        jLabelNombreCarrera.setFont(new java.awt.Font("Yu Gothic Medium", 1, 18)); // NOI18N
        jLabelNombreCarrera.setText("jLabel1");
        jLabelNombreCarrera.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 2, true));

        jLabelSituacion.setText("jLabel1");

        jButtonFinalizar.setText("Finalizar");
        jButtonFinalizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonFinalizarActionPerformed(evt);
            }
        });

        cronometro1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cronometro1ActionPerformed(evt);
            }
        });

        jMenuAyuda.setText("Ayuda...");

        jMenuItemMenuAyuda.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_A, java.awt.event.InputEvent.ALT_MASK));
        jMenuItemMenuAyuda.setText("Menu Ayuda");
        jMenuAyuda.add(jMenuItemMenuAyuda);

        jMenuItemCorredor.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_B, java.awt.event.InputEvent.ALT_MASK));
        jMenuItemCorredor.setText("Corredor");
        jMenuAyuda.add(jMenuItemCorredor);

        jMenuItemCarrera.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_C, java.awt.event.InputEvent.ALT_MASK));
        jMenuItemCarrera.setText("Carrera");
        jMenuAyuda.add(jMenuItemCarrera);

        jMenuItemCarreraCorriendo.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_D, java.awt.event.InputEvent.ALT_MASK));
        jMenuItemCarreraCorriendo.setText("CarreraCorriendo");
        jMenuAyuda.add(jMenuItemCarreraCorriendo);

        jMenuBar1.add(jMenuAyuda);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(24, 24, 24)
                        .addComponent(jLabelNombreCarrera, javax.swing.GroupLayout.PREFERRED_SIZE, 314, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 326, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(40, 40, 40)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jButtonIniciar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabelSituacion, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButtonFinalizar, javax.swing.GroupLayout.DEFAULT_SIZE, 93, Short.MAX_VALUE))
                    .addComponent(cronometro1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(169, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(jLabelSituacion, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(cronometro1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButtonIniciar)
                .addGap(70, 70, 70)
                .addComponent(jButtonFinalizar)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabelNombreCarrera, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 219, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(64, 64, 64))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonIniciarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonIniciarActionPerformed
        // TODO add your handling code here:
        cronometro1.reiniciar();
        jButtonIniciar.setEnabled(false);
        jButtonIniciar.setVisible(false);
        cronometro1.setVisible(true);
        this.setDefaultCloseOperation(0);
    }//GEN-LAST:event_jButtonIniciarActionPerformed

    private void jButtonFinalizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonFinalizarActionPerformed
        // TODO add your handling code here:
        cronometro1.cerrarCronometro();
        LeerEscribirCSV lec=new LeerEscribirCSV();
        lec.escribirClasificacionCarrera(carrera);
        this.dispose();
    }//GEN-LAST:event_jButtonFinalizarActionPerformed

    private void cronometro1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cronometro1ActionPerformed
        // TODO add your handling code here:
        // TODO add your handling code here:
        PantallaCarraresLlegadaCorredor pclc = new PantallaCarraresLlegadaCorredor(pp, true, dorsalesSinLlegar, cronometro1.getText(), this.carrera);
        pclc.setVisible(true);
        rellenarTabla();
    }//GEN-LAST:event_cronometro1ActionPerformed

    /**
     * @param args the command line arguments
     */

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private ElementosPersonalizados.Cronometro cronometro1;
    private javax.swing.JButton jButtonFinalizar;
    private javax.swing.JButton jButtonIniciar;
    private javax.swing.JLabel jLabelNombreCarrera;
    private javax.swing.JLabel jLabelSituacion;
    private javax.swing.JMenu jMenuAyuda;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItemCarrera;
    private javax.swing.JMenuItem jMenuItemCarreraCorriendo;
    private javax.swing.JMenuItem jMenuItemCorredor;
    private javax.swing.JMenuItem jMenuItemMenuAyuda;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTableCorredoresNoLlegaron;
    // End of variables declaration//GEN-END:variables
}
